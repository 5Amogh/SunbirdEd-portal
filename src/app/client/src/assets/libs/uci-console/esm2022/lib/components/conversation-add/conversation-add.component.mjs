import { Component, ViewChild } from '@angular/core';
import { Validators } from '@angular/forms';
import moment from 'moment/moment';
import { debounceTime } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../../services/uci.service";
import * as i2 from "@angular/router";
import * as i3 from "@angular/forms";
import * as i4 from "../../services/global.service";
import * as i5 from "@angular/common";
import * as i6 from "@project-sunbird/ng2-semantic-ui";
import * as i7 from "../user-segment-list/user-segment-list.component";
import * as i8 from "../user-segment-add/user-segment-add.component";
import * as i9 from "../terms-conditions/terms-conditions.component";
export class ConversationAddComponent {
    constructor(uciService, router, activatedRoute, fb, globalService) {
        this.uciService = uciService;
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.fb = fb;
        this.globalService = globalService;
        this.currentViewState = 'ADD_CONVERSATION';
        this.stepIndex = 1;
        this.selectedLogic = [];
        this.userSegments = [];
        this.column = '';
        this.sortDirection = '';
        this.reverse = false;
        this.collectionListModal = false;
        this.isLoaderShow = false;
        this.isModalLoaderShow = false;
        this.logicFormRequest = {};
        this.isCheckedTermCondition = false;
        this.termsAndConditionModal = false;
        this.verifyAllItemsModal = false;
        this.startMinDate = new Date();
        this.Appropriateness = [
            {
                text: 'No Hate speech, Abuse, Violence, Profanity',
                checks: false
            },
            {
                text: 'No Sexual content, Nudity or Vulgarity',
                checks: false
            },
            {
                text: 'No Discrimination or Defamation',
                checks: false
            },
            {
                text: 'Is suitable for children',
                checks: false
            }
        ];
        this.contentDetails = [
            {
                text: 'Appropriate Title, Description',
                checks: false
            },
            {
                text: 'Correct Board, Grade, Subject, Medium',
                checks: false
            },
            {
                text: 'Appropriate tags such as Resource Type, Concepts',
                checks: false
            },
            {
                text: 'Relevant keywords',
                checks: false
            }
        ];
        this.usability = [
            {
                text: 'Content plays correctly',
                checks: false
            },
            {
                text: 'Can see the content clearly on Desktop and App',
                checks: false
            },
            {
                text: 'Audio (if any) is clear and easy to understand',
                checks: false
            },
            {
                text: 'No spelling mistakes in the text',
                checks: false
            },
            {
                text: 'Language is simple to understand',
                checks: false
            }
        ];
        this.odkFileAlreadyExist = false;
        this.isStartingMessageExist = false;
        const tempDate = moment().add(1, 'days').format('YYYY-MM-DD');
        this.endMinDate = new Date(tempDate);
    }
    ngOnInit() {
        this.user = this.globalService.getUser();
        if (!this.user) {
            this.router.navigate(['uci-admin']);
            return;
        }
        this.conversationForm = this.fb.group({
            name: ['', Validators.required],
            description: [''],
            purpose: ['', Validators.required],
            startingMessage: ['', Validators.required],
            startDate: [null],
            endDate: [null],
            status: ['Draft']
        });
        this.logicForm = this.fb.group({
            id: [null],
            name: ['', Validators.required],
            description: [''],
            formId: ['', Validators.required]
        });
        // Edit case
        this.conversationId = this.activatedRoute.snapshot.paramMap.get('id');
        if (this.conversationId) {
            this.getUserSegmentDetail();
        }
        // start date and end date value change
        this.conversationForm.get('startDate').valueChanges.subscribe(val => {
            this.conversationForm.get('endDate').patchValue(null);
            const tempDate = moment(val).add(1, 'days').format('YYYY-MM-DD');
            this.endMinDate = new Date(tempDate);
        });
        this.conversationForm.get('startingMessage').valueChanges
            .pipe(debounceTime(1000))
            .subscribe(value => {
            this.onStarringMessageChange();
        });
    }
    userSegment() {
        this.currentViewState = 'SELECT_SEGMENT';
    }
    onUserSegmentCancel() {
        this.currentViewState = 'ADD_CONVERSATION';
    }
    onUserSegmentAddClick() {
        this.currentViewState = 'ADD_SEGMENT';
    }
    onUserSegmentAdd(segments) {
        this.userSegments = segments;
        this.currentViewState = 'ADD_CONVERSATION';
    }
    onUserSegmentCreate(segment) {
        this.userSegments.push(segment);
        this.currentViewState = 'ADD_CONVERSATION';
    }
    onUserSegmentDelete(index) {
        this.userSegments.splice(index, 1);
    }
    nextStep() {
        if (this.stepIndex === 1 && this.conversationForm.valid) {
            this.stepIndex = 2;
        }
    }
    backToStepOne() {
        if (this.stepIndex === 2) {
            this.stepIndex = 1;
        }
    }
    onAddCancel() {
        this.router.navigate(['uci-admin']);
    }
    onSubmit(isTriggerBot = false) {
        const reqObj = {
            ...this.conversationForm.value,
            users: [],
            logic: []
        };
        this.userSegments.forEach(userSegment => {
            reqObj.users.push(userSegment.id);
        });
        this.selectedLogic.forEach(logic => {
            reqObj.logic.push(logic.id);
        });
        this.isLoaderShow = true;
        if (this.conversationId) {
            this.uciService.botUpdate(this.conversationId, { data: reqObj }).subscribe(data => {
                this.closeVerifyModal();
                this.isLoaderShow = false;
                this.router.navigate(['uci-admin/success'], { queryParams: { text: reqObj.startingMessage, botId: this.conversationId } });
            }, error => {
                this.isLoaderShow = false;
                this.verifyAllItemsModal = true;
            });
        }
        else {
            this.uciService.botCreate({ data: reqObj }).subscribe((data) => {
                if (isTriggerBot) {
                    this.startConversation(data.data);
                }
                else {
                    this.closeVerifyModal();
                    this.isLoaderShow = false;
                    this.router.navigate(['uci-admin/success'], { queryParams: { text: reqObj.startingMessage, botId: data.data.id } });
                }
            }, error => {
                this.isLoaderShow = false;
                this.verifyAllItemsModal = true;
            });
        }
    }
    startConversation(bot) {
        this.uciService.startConversation(bot.id).subscribe(data => {
            this.isLoaderShow = false;
            this.closeVerifyModal();
            this.router.navigate(['uci-admin/success'], {
                queryParams: {
                    text: this.conversationForm.value.startingMessage,
                    botId: bot.id
                }
            });
        }, error => {
            this.verifyAllItemsModal = true;
            this.isLoaderShow = false;
        });
    }
    closeVerifyModal() {
        if (this.verifyAllModal) {
            this.verifyAllModal.deny('denied');
        }
        this.verifyAllItemsModal = false;
    }
    openModel() {
        this.logicFormRequest = {};
        this.collectionListModal = true;
        this.logicForm.reset();
        this.fileErrorStatus = null;
        this.isStartingMessageExist = false;
    }
    openTermAndConditionModel() {
        this.termsAndConditionModal = true;
    }
    openItemsVerifyModal(isSubmitBtn) {
        this.verifyAllItemsModal = true;
        this.isSubmit = isSubmitBtn;
    }
    onLogicAdd() {
        const reqData = {
            ...this.logicForm.value,
            transformers: [
                {
                    id: 'bbf56981-b8c9-40e9-8067-468c2c753659',
                    meta: {
                        form: 'https://hosted.my.form.here.com',
                        formID: this.logicForm.value.formId
                    }
                }
            ],
            adapter: '44a9df72-3d7a-4ece-94c5-98cf26307324'
        };
        this.isModalLoaderShow = true;
        if (this.logicForm.get('id').value) {
            this.uciService.updateLogic(this.logicForm.get('id').value, { data: reqData }).subscribe((data) => {
                this.isModalLoaderShow = false;
                const existingLogic = reqData;
                delete existingLogic.id;
                this.selectedLogic[this.selectedLogicIndex] = Object.assign(this.selectedLogic[this.selectedLogicIndex], existingLogic);
            }, error => {
                this.isModalLoaderShow = false;
            });
        }
        else {
            this.uciService.createLogic({ data: reqData }).subscribe((data) => {
                this.isModalLoaderShow = false;
                const existingLogic = reqData;
                delete existingLogic.id;
                this.selectedLogic.push({
                    id: data.data.id,
                    ...existingLogic,
                });
            }, error => {
                this.isModalLoaderShow = false;
            });
        }
    }
    getEditLogicData(item, index) {
        if (item.id) {
            this.selectedLogicIndex = index;
            this.logicForm.patchValue({
                id: item.id,
                name: item.name,
                description: item.description,
                formId: item.transformers[0].meta.formID
            });
        }
    }
    onFileUpload(event) {
        if (!event.target.files.length) {
            return;
        }
        const file = event.target.files[0];
        const obj = {
            form: file
        };
        this.logicForm.patchValue({ formId: '' });
        this.isModalLoaderShow = true;
        this.uciService.uploadFile(obj).subscribe((fileInfo) => {
            if (fileInfo.result?.data) {
                this.logicForm.patchValue({ formId: fileInfo.result?.data });
            }
            this.isModalLoaderShow = false;
            this.odkFileAlreadyExist = false;
        }, error => {
            this.isModalLoaderShow = false;
            this.odkFileAlreadyExist = true;
            this.fileErrorStatus = error.error.status;
        });
    }
    onDelete(logic, index) {
        this.uciService.deleteLogic(logic.id).subscribe(file => {
            this.selectedLogic.splice(index, 1);
        });
    }
    getUserSegmentDetail() {
        this.uciService.getBotUserDetails(this.conversationId).subscribe((val) => {
            if (val.data) {
                this.conversationForm.patchValue({
                    name: val.data.name,
                    description: val.data.description,
                    purpose: val.data.purpose,
                    startingMessage: val.data.startingMessage,
                    startDate: val.data.startDate ? val.data.startDate : '',
                    endDate: val.data.endDate ? val.data.endDate : ''
                });
                if (val.data.userSegments) {
                    this.userSegments = val.data.userSegments;
                }
                if (val.data.logic) {
                    this.selectedLogic = val.data.logic;
                }
            }
        });
    }
    allCheck(isAllCheck = false) {
        this.Appropriateness.forEach(val => {
            val.checks = isAllCheck;
        });
        this.contentDetails.forEach(val => {
            val.checks = isAllCheck;
        });
        this.usability.forEach(val => {
            val.checks = isAllCheck;
        });
    }
    onStarringMessageChange() {
        this.uciService.getCheckStartingMessage({ startingMessage: this.conversationForm.value.startingMessage }).subscribe(val => {
            this.isStartingMessageExist = true;
        }, error => {
            this.isStartingMessageExist = false;
        });
    }
    manualDownload() {
        window.open(this.globalService.getBaseUrl() + '/UCI%20_%20ODK%20Instruction%20Manual.pdf', '_blank');
    }
    sampleODKDownload() {
        window.open(this.globalService.getBaseUrl() + '/Sample_ODK.xlsx', '_blank');
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ConversationAddComponent, deps: [{ token: i1.UciService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: i3.UntypedFormBuilder }, { token: i4.GlobalService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: ConversationAddComponent, selector: "lib-conversation-add", viewQueries: [{ propertyName: "verifyAllModal", first: true, predicate: ["verifyAllModal"], descendants: true }], ngImport: i0, template: "<ng-container [ngSwitch]=\"currentViewState\">\n\n    <lib-user-segment-add *ngSwitchCase=\"'ADD_SEGMENT'\"\n                          (cancel)=\"onUserSegmentCancel()\"\n                          (add)=\"onUserSegmentCreate($event)\">\n    </lib-user-segment-add>\n\n    <lib-user-segment-list *ngSwitchCase=\"'SELECT_SEGMENT'\"\n                           (cancel)=\"onUserSegmentCancel()\"\n                           (add)=\"onUserSegmentAdd($event)\"\n                           [selectedUserSegments]=\"userSegments\">\n    </lib-user-segment-list>\n\n    <div *ngSwitchCase=\"'ADD_CONVERSATION'\" class=\"uci-add-container\">\n        <div class=\"ui grid\">\n            <div class=\"six wide column pr-0\">\n                <div class=\"d-flex font-0-75\" style=\"align-items: baseline;\">\n                    <div style=\"width: 30px\">\n                        <button class=\"circular ui icon button\" style=\"width: 100%; font-size: 0.75rem\"\n                                (click)=\"backToStepOne()\"\n                                [ngClass]=\"{'blue-bg-white-text': stepIndex === 1, 'green-bg-white-text': stepIndex === 2}\">\n                            1\n                        </button>\n                    </div>\n                    <div class=\"px-5 pt-10\">Conversation setup</div>\n                    <div class=\"line mt-20 ml-20 mr-20\"></div>\n                    <div style=\"width: 30px\">\n                        <button class=\"circular ui icon button\" style=\"width: 100%; font-size: 0.75rem\"\n                                [ngClass]=\"{'blue-bg-white-text': stepIndex === 2}\">2\n                        </button>\n                    </div>\n                    <div class=\"px-5 pt-10 font-weight-bold\">Conversation flow</div>\n                </div>\n            </div>\n            <div class=\"six wide column\">\n                <ng-container *ngIf=\"stepIndex === 1; else stp2_btn\">\n                    <div class=\"right-floated pt-0\">\n                        <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary mr-10\" (click)=\"onAddCancel()\">\n                            Cancel\n                        </button>\n                        <button class=\"sb-btn sb-btn-normal sb-btn-primary\" [disabled]=\"conversationForm.invalid || isStartingMessageExist\"\n                                (click)=\"nextStep()\"> Next\n                        </button>\n                    </div>\n                </ng-container>\n                <ng-template #stp2_btn>\n                    <div class=\"ui grid\">\n                        <div class=\"twelve wide column\">\n                            <div class=\"right-floated pt-0\">\n                                <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary mr-10\" *ngIf=\"!isLoaderShow\"\n                                        (click)=\"backToStepOne()\"> Back\n                                </button>\n                                <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary mr-10\" (click)=\"openItemsVerifyModal(false)\"\n                                        *ngIf=\"!isLoaderShow\">\n                                    Save\n                                </button>\n                                <ng-container *ngIf=\"isLoaderShow; else submitBtn1\">\n                                    <button class=\"sb-btn sb-btn-normal sb-btn-primary p-0\">\n                                        <div class=\"ui active tiny inline loader\"></div>\n                                    </button>\n                                </ng-container>\n                                <ng-template #submitBtn1>\n                                    <button class=\"sb-btn sb-btn-normal sb-btn-primary\"\n                                            [disabled]=\"!isCheckedTermCondition\"\n                                            (click)=\"this.conversationId ? onSubmit(true) : openItemsVerifyModal(true)\">\n                                        {{conversationId ? 'Update' : 'Submit'}}\n                                    </button>\n                                </ng-template>\n\n                            </div>\n                        </div>\n                        <div class=\"twelve wide column pt-0\">\n                            <div class=\"right-floated pt-0\">\n                                <div class=\"ui checkbox\">\n                                    <input type=\"checkbox\" name=\"example\"\n                                           [(ngModel)]=\"isCheckedTermCondition\">\n                                    <label class=\"font-weight-normal t-and-c-title\"\n                                           (click)=\"openTermAndConditionModel()\"> I agree to the required terms and\n                                        conditions </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-template>\n\n            </div>\n        </div>\n        <div class=\"step1-wrapper\" *ngIf=\"stepIndex === 1\">\n            <div class=\"ui grid\">\n                <div class=\"ten wide column font-1-2 font-weight-bold\">\n                    Add new conversation\n                </div>\n                <div class=\"ten wide column pt-0\">\n                    <form [formGroup]=\"conversationForm\" class=\"ui form\">\n                        <div class=\"field\">\n                            <label>Conversation name <sup><i class=\"asterisk icon asterisk-color\"></i></sup></label>\n                            <input type=\"text\" name=\"name\" placeholder=\"Enter name\" formControlName=\"name\">\n                        </div>\n                        <div class=\"field\">\n                            <label>Conversation description</label>\n                            <textarea rows=\"5\" name=\"description\" placeholder=\"Enter description\"\n                                      formControlName=\"description\"></textarea>\n                        </div>\n                        <div class=\"field\">\n                            <label>Purpose of the conversation <sup><i\n                                    class=\"asterisk icon asterisk-color\"></i></sup></label>\n                            <input type=\"text\" name=\"name\" placeholder=\"Enter purpose\" formControlName=\"purpose\">\n                        </div>\n                        <div class=\"field\">\n                            <label>Starting message <sup><i class=\"asterisk icon asterisk-color\"></i></sup></label>\n                            <input type=\"text\" name=\"startingMessage\" placeholder=\"Enter message\"\n                                   formControlName=\"startingMessage\">\n                            <small *ngIf=\"isStartingMessageExist\" class=\"text-danger\">This starting message has already been taken</small>\n                        </div>\n                        <div class=\"two fields\">\n                            <div class=\"field\">\n                                <label>Start Date And Time</label>\n                                <div class=\"ui left icon input\">\n                                    <i class=\"calendar icon\"></i>\n                                    <input suiDatepicker\n                                           formControlName=\"startDate\"\n                                           [pickerMode]=\"'datetime'\"\n                                           [pickerMinDate]=\"startMinDate\"\n                                           [pickerUseNativeOnMobile]=\"false\">\n                                </div>\n                            </div>\n                            <div class=\"field\">\n                                <label>End Date And Time</label>\n                                <div class=\"ui left icon input\">\n                                    <i class=\"calendar icon\"></i>\n                                    <input suiDatepicker\n                                           formControlName=\"endDate\"\n                                           [pickerMode]=\"'datetime'\"\n                                           [pickerMinDate]=\"endMinDate\"\n                                           [pickerUseNativeOnMobile]=\"false\">\n                                </div>\n                            </div>\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n            <div class=\"ui divider\"></div>\n            <div class=\"ui grid\">\n                <div class=\"six wide column\">\n                    <h6>User segments</h6>\n                    <p class=\"pt-10\">{{userSegments.length}} segments added</p>\n                </div>\n                <div class=\"six wide column  right aligned\">\n                    <div class=\"pt-0\">\n                        <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary mr-10\"\n                                (click)=\"onUserSegmentAddClick()\">\n                            Create new\n                        </button>\n                        <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary\" (click)=\"userSegment()\">\n                            Choose from existing\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"ui grid\">\n                <ng-container *ngIf=\"userSegments && userSegments.length\">\n                    <div class=\"ui three column grid\">\n                        <div class=\"column\" *ngFor=\"let userSegment of userSegments; let i = index\">\n                            <div class=\"ui fluid card\">\n                                <div class=\"content\">\n                                    <i class=\"right floated icon trash delete-icon\"\n                                       (click)=\"onUserSegmentDelete(i)\"></i>\n                                    {{userSegment.name}}\n                                    <div class=\"meta\">User count {{userSegment.count}}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n\n            </div>\n        </div>\n\n        <div class=\"step2-wrapper\" *ngIf=\"stepIndex === 2\">\n            <div class=\"ui grid\">\n                <div class=\"ten wide column font-1-2 font-weight-bold\">\n                    Conversation flow\n                </div>\n                <div class=\"two wide column right aligned\">\n                    <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary\"\n                            *ngIf=\"selectedLogic && selectedLogic.length\"\n                            (click)=\"openModel()\">\n                        Add Logic\n                    </button>\n                </div>\n            </div>\n            <div class=\"ui grid\">\n                <ng-container *ngIf=\"selectedLogic && selectedLogic.length <= 0; else showTable\">\n                    <div class=\"twelve wide column center aligned\">\n                        <div class=\"pt-0\">\n                            <div class=\"w-25-per text-center\" style=\"margin: auto; padding: 2rem;\">\n                                <div class=\"text-center\">\n                                    <div class=\"text-center\">\n                                        <img alt=\"Search Icon\" src=\"assets/uci-console/images/empty.svg\">\n                                    </div>\n                                    <div class=\"text-center mt-20\">\n                                        No logic Added\n                                    </div>\n                                </div>\n                                <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary mt-10\" (click)=\"openModel()\">\n                                    Add logic\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <ng-template #showTable>\n                    <div class=\"twelve wide column\">\n                        <table class=\"ui table\" style=\"width: 100%\">\n                            <thead>\n                            <tr>\n                                <th class=\"one wide center aligned UpReviewTableHeader sorted bl-0\">\n                                    Step\n                                </th>\n                                <th class=\"three wide UpReviewTableHeader sorted bl-0\">\n                                    Name\n                                </th>\n                                <th class=\"five wide UpReviewTableHeader sorted bl-0\">\n                                    Description\n                                </th>\n                                <th class=\"one wide center aligned UpReviewTableHeader sorted bl-0\">\n                                    Action\n                                </th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            <tr class=\"UpForReviewListHover\"\n                                *ngFor=\"let logic of selectedLogic; let i = index;\">\n                                <td class=\"center aligned\">{{i + 1}}</td>\n                                <td>{{logic?.name}}</td>\n                                <td>{{logic?.description}}</td>\n                                <td class=\"center aligned\">\n                                    <div class=\"ui dropdown\" suiDropdown>\n                                        <i class=\"ellipsis vertical icon ellipsis-icon dropdown\"\n                                        ></i>\n                                        <div class=\"menu\" suiDropdownMenu>\n                                            <div class=\"item\" (click)=\"openModel(); getEditLogicData(logic, i)\">Edit\n                                            </div>\n                                            <div class=\"item\" (click)=\"onDelete(logic, i)\">Delete</div>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</ng-container>\n\n<sui-modal *ngIf=\"collectionListModal\" [mustScroll]=\"true\" [isClosable]=\"false\" [transitionDuration]=\"0\"\n           [size]=\"'large'\"\n           class=\"sb-modal\" (dismissed)=\"this.collectionListModal = false;\" #modal>\n    <div class=\"sb-modal-header\">\n        {{logicForm.get('id').value ? ' Update' : 'Add'}} Conversation Logic\n    </div>\n    <div class=\"sb-modal-content\">\n        <form [formGroup]=\"logicForm\" class=\"ui form\">\n            <div class=\"field\">\n                <label>Name <sup><i class=\"asterisk icon asterisk-color\"></i></sup></label>\n                <input type=\"text\" name=\"name\" placeholder=\"Enter name\" formControlName=\"name\">\n            </div>\n            <div class=\"field\">\n                <label>Description</label>\n                <textarea rows=\"3\" name=\"description\" placeholder=\"Enter description\"\n                          formControlName=\"description\"></textarea>\n            </div>\n            <div class=\"field\">\n                <label>\n                    <div class=\"two fields m-0\">\n                        <div class=\"field p-0\">\n                            Upload ODK Form (.xml)<sup><i class=\"asterisk icon asterisk-color\"></i></sup>\n                        </div>\n                        <div class=\"field text-right p-0\">\n                            <a class=\"mx-20 sample-download\" (click)=\"manualDownload()\">Instruction Manual</a>\n                            <a class=\"ml-1 sample-download\" (click)=\"sampleODKDownload()\">Sample ODK Form (.xlsx)</a>\n                        </div>\n                    </div>\n\n                </label>\n                <input type=\"file\" name=\"file\" placeholder=\"Browse XML File...\"\n                       (change)=\"onFileUpload($event)\" accept=\".xml\">\n                <small *ngIf=\"odkFileAlreadyExist\" class=\"text-danger\">{{fileErrorStatus}}</small>\n            </div>\n        </form>\n    </div>\n    <div class=\"sb-modal-actions\">\n        <ng-container *ngIf=\"isModalLoaderShow; else modalBtn\">\n            <button class=\"sb-btn sb-btn-normal sb-btn-primary p-0\">\n                <div class=\"ui active tiny inline loader\"></div>\n            </button>\n        </ng-container>\n        <ng-template #modalBtn>\n            <button class=\"sb-btn sb-btn-normal sb-btn-primary\" (click)=\"onLogicAdd();modal.deny('denied')\"\n                    [disabled]=\"logicForm.invalid\">\n                {{logicForm.get('id').value ? ' Update' : 'Add'}}\n            </button>\n        </ng-template>\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary\"\n                (click)=\"modal.deny('denied');isModalLoaderShow = false;logicForm.patchValue({formId: ''});\">\n            Cancel\n        </button>\n    </div>\n</sui-modal>\n\n<sui-modal *ngIf=\"termsAndConditionModal\" [mustScroll]=\"true\" [isClosable]=\"false\" [transitionDuration]=\"0\"\n           [size]=\"'large'\"\n           class=\"sb-modal\" (dismissed)=\"this.termsAndConditionModal = false\" #modal>\n    <div class=\"sb-modal-header\">\n        Terms and Conditions\n    </div>\n    <div class=\"sb-modal-content\">\n        <lib-terms-conditions></lib-terms-conditions>\n    </div>\n    <div class=\"sb-modal-actions\">\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary\"\n                (click)=\"modal.deny('denied');\">\n            Cancel\n        </button>\n    </div>\n</sui-modal>\n<sui-modal *ngIf=\"verifyAllItemsModal\" [mustScroll]=\"true\" [isClosable]=\"false\" [transitionDuration]=\"0\"\n           [size]=\"'large'\"\n           class=\"sb-modal\" (dismissed)=\"this.verifyAllItemsModal = false\" #verifyAllModal>\n    <div class=\"sb-modal-header\">\n        <h4>\n            Please confirm that ALL the following items are verified (by ticking the check-boxes) before you can submit:\n        </h4>\n    </div>\n    <div class=\"sb-modal-content\">\n        <div class=\"ui grid\">\n            <div class=\"four wide column\">\n                <div class=\"mb-20\">\n                    <h4>Appropriateness</h4>\n                    <div class=\"ui divider\"></div>\n                </div>\n                <div class=\"ui grid\" *ngFor=\"let list of Appropriateness; let i = index\">\n                    <div class=\"two wide column pb-0\">\n                        <input type=\"checkbox\" [name]=\"'appropriateness' + i\" [(ngModel)]=\"list.checks\">\n                    </div>\n                    <div class=\"ten wide column pl-0 pb-0 line-height\">\n                        {{list.text}}\n                    </div>\n                </div>\n            </div>\n            <div class=\"four wide column\">\n                <div class=\"mb-20\">\n                    <h4>Content Details</h4>\n                    <div class=\"ui divider\"></div>\n                </div>\n                <div class=\"ui grid\" *ngFor=\"let list of contentDetails; let i = index\">\n                    <div class=\"two wide column pb-0\">\n                        <input type=\"checkbox\" [name]=\"'contentDetails' + i\" [(ngModel)]=\"list.checks\">\n                    </div>\n                    <div class=\"ten wide column pl-0 pb-0 line-height\">\n                        {{list.text}}\n                    </div>\n                </div>\n            </div>\n            <div class=\"four wide column\">\n                <div class=\"mb-20\">\n                    <h4>Usability</h4>\n                    <div class=\"ui divider\"></div>\n                </div>\n                <div class=\"ui grid\" *ngFor=\"let list of usability; let i = index\">\n                    <div class=\"two wide column pb-0\">\n                        <input type=\"checkbox\" [name]=\"'usability' + i\" [(ngModel)]=\"list.checks\">\n                    </div>\n                    <div class=\"ten wide column pl-0 pb-0 line-height\">\n                        {{list.text}}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"sb-modal-actions\">\n        <ng-container *ngIf=\"isLoaderShow; else submitBtn\">\n            <button class=\"sb-btn sb-btn-normal sb-btn-primary p-0\">\n                <div class=\"ui active tiny inline loader\"></div>\n            </button>\n        </ng-container>\n        <ng-template #submitBtn>\n            <button *ngIf=\"isSubmit\" class=\"sb-btn sb-btn-normal sb-btn-primary\"\n                    (click)=\"onSubmit(true);\">\n                Submit\n            </button>\n            <button *ngIf=\"!isSubmit\" class=\"sb-btn sb-btn-normal sb-btn-primary\"\n                    (click)=\"onSubmit(false);\">\n                Save\n            </button>\n        </ng-template>\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary\"\n                (click)=\"allCheck(false); verifyAllModal.deny('denied');\">\n            Cancel\n        </button>\n        <button class=\"sb-btn sb-btn-normal sb-btn-primary allCheckBtn\" (click)=\"allCheck(true)\">\n            Confirm All\n        </button>\n    </div>\n</sui-modal>\n", styles: [".filter_search{border-radius:25px!important}.ellipsis-icon{font-size:1.2rem}.w-50-px{width:50px!important}.font-1-2{font-size:1.2rem}.ui.form .field>label{font-weight:400}.action-dropdown{top:2px;left:-56px;z-index:2;position:absolute}.action-dropdown .item{cursor:pointer}.action-dropdown .item:hover{background-color:#f6f6f6}.steps{width:20px;height:20px;overflow:hidden;border:1px solid #777777;border-radius:10px;display:flex;align-items:center;justify-content:center;background-color:#e2e2e2;color:#000;margin-right:.7rem;font-size:.75rem}.font-0-75{font-size:.75rem}.line{background-color:#777;width:25%;height:1px}.blue-bg-white-text{background-color:#0c5593!important;color:#fff!important}.green-bg-white-text{background-color:#3c763d!important;color:#fff!important}.w-25-per{width:25%}.delete-icon{color:red;font-size:1.5rem}.delete-icon-sec{display:flex;justify-content:center;align-items:center}button:disabled{background:#89cff0;border-color:#89cff0}.asterisk-color{color:red}.t-and-c-title{cursor:pointer!important}.t-and-c-title:hover{color:#89cff0!important}.sb-modal.ui.modal{box-shadow:none!important}.sb-modal.ui.modal.normal{max-width:45rem;height:0!important}.line-height{line-height:normal}.allCheckBtn{position:absolute;left:1rem}.sample-download{text-decoration:underline!important;cursor:pointer!important}.text-danger{color:red!important}\n"], dependencies: [{ kind: "directive", type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i5.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i5.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: i3.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i3.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i3.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i3.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "directive", type: i6.SuiRadioManager, selector: "form:not([ngForm]):not([[ngForm]]),ngForm,[ngForm]" }, { kind: "directive", type: i6.SuiDatepickerDirective, selector: "[suiDatepicker]", inputs: ["pickerMode", "pickerInitialDate", "pickerMaxDate", "pickerMinDate", "pickerFirstDayOfWeek", "pickerLocaleOverrides", "pickerPlacement", "pickerTransition", "pickerTransitionDuration"], outputs: ["pickerSelectedDateChange", "pickerValidatorChange"] }, { kind: "directive", type: i6.SuiDatepickerDirectiveValueAccessor, selector: "[suiDatepicker]" }, { kind: "directive", type: i6.SuiDatepickerDirectiveValidator, selector: "[suiDatepicker]" }, { kind: "directive", type: i6.SuiDatepickerInputDirective, selector: "input[suiDatepicker]", inputs: ["pickerUseNativeOnMobile"] }, { kind: "directive", type: i6.SuiDropdown, selector: "[suiDropdown]", inputs: ["isOpen", "isDisabled", "tabindex", "autoClose"], outputs: ["isOpenChange"] }, { kind: "directive", type: i6.SuiDropdownMenu, selector: "[suiDropdownMenu]", inputs: ["menuTransition", "menuTransitionDuration", "menuAutoSelectFirst", "menuSelectedItemClass"] }, { kind: "directive", type: i6.SuiDropdownMenuItem, selector: ".item" }, { kind: "component", type: i6.SuiModal, selector: "sui-modal", inputs: ["isClosable", "closeResult", "size", "isCentered", "isFullScreen", "isBasic", "mustScroll", "isInverted", "transition", "transitionDuration"], outputs: ["approved", "denied", "dismissed"] }, { kind: "component", type: i7.UserSegmentListComponent, selector: "lib-user-segment-list", inputs: ["selectedUserSegments"], outputs: ["cancel", "add"] }, { kind: "component", type: i8.UserSegmentAddComponent, selector: "lib-user-segment-add", outputs: ["cancel", "add"] }, { kind: "component", type: i9.TermsConditionsComponent, selector: "lib-terms-conditions" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ConversationAddComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-conversation-add', template: "<ng-container [ngSwitch]=\"currentViewState\">\n\n    <lib-user-segment-add *ngSwitchCase=\"'ADD_SEGMENT'\"\n                          (cancel)=\"onUserSegmentCancel()\"\n                          (add)=\"onUserSegmentCreate($event)\">\n    </lib-user-segment-add>\n\n    <lib-user-segment-list *ngSwitchCase=\"'SELECT_SEGMENT'\"\n                           (cancel)=\"onUserSegmentCancel()\"\n                           (add)=\"onUserSegmentAdd($event)\"\n                           [selectedUserSegments]=\"userSegments\">\n    </lib-user-segment-list>\n\n    <div *ngSwitchCase=\"'ADD_CONVERSATION'\" class=\"uci-add-container\">\n        <div class=\"ui grid\">\n            <div class=\"six wide column pr-0\">\n                <div class=\"d-flex font-0-75\" style=\"align-items: baseline;\">\n                    <div style=\"width: 30px\">\n                        <button class=\"circular ui icon button\" style=\"width: 100%; font-size: 0.75rem\"\n                                (click)=\"backToStepOne()\"\n                                [ngClass]=\"{'blue-bg-white-text': stepIndex === 1, 'green-bg-white-text': stepIndex === 2}\">\n                            1\n                        </button>\n                    </div>\n                    <div class=\"px-5 pt-10\">Conversation setup</div>\n                    <div class=\"line mt-20 ml-20 mr-20\"></div>\n                    <div style=\"width: 30px\">\n                        <button class=\"circular ui icon button\" style=\"width: 100%; font-size: 0.75rem\"\n                                [ngClass]=\"{'blue-bg-white-text': stepIndex === 2}\">2\n                        </button>\n                    </div>\n                    <div class=\"px-5 pt-10 font-weight-bold\">Conversation flow</div>\n                </div>\n            </div>\n            <div class=\"six wide column\">\n                <ng-container *ngIf=\"stepIndex === 1; else stp2_btn\">\n                    <div class=\"right-floated pt-0\">\n                        <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary mr-10\" (click)=\"onAddCancel()\">\n                            Cancel\n                        </button>\n                        <button class=\"sb-btn sb-btn-normal sb-btn-primary\" [disabled]=\"conversationForm.invalid || isStartingMessageExist\"\n                                (click)=\"nextStep()\"> Next\n                        </button>\n                    </div>\n                </ng-container>\n                <ng-template #stp2_btn>\n                    <div class=\"ui grid\">\n                        <div class=\"twelve wide column\">\n                            <div class=\"right-floated pt-0\">\n                                <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary mr-10\" *ngIf=\"!isLoaderShow\"\n                                        (click)=\"backToStepOne()\"> Back\n                                </button>\n                                <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary mr-10\" (click)=\"openItemsVerifyModal(false)\"\n                                        *ngIf=\"!isLoaderShow\">\n                                    Save\n                                </button>\n                                <ng-container *ngIf=\"isLoaderShow; else submitBtn1\">\n                                    <button class=\"sb-btn sb-btn-normal sb-btn-primary p-0\">\n                                        <div class=\"ui active tiny inline loader\"></div>\n                                    </button>\n                                </ng-container>\n                                <ng-template #submitBtn1>\n                                    <button class=\"sb-btn sb-btn-normal sb-btn-primary\"\n                                            [disabled]=\"!isCheckedTermCondition\"\n                                            (click)=\"this.conversationId ? onSubmit(true) : openItemsVerifyModal(true)\">\n                                        {{conversationId ? 'Update' : 'Submit'}}\n                                    </button>\n                                </ng-template>\n\n                            </div>\n                        </div>\n                        <div class=\"twelve wide column pt-0\">\n                            <div class=\"right-floated pt-0\">\n                                <div class=\"ui checkbox\">\n                                    <input type=\"checkbox\" name=\"example\"\n                                           [(ngModel)]=\"isCheckedTermCondition\">\n                                    <label class=\"font-weight-normal t-and-c-title\"\n                                           (click)=\"openTermAndConditionModel()\"> I agree to the required terms and\n                                        conditions </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-template>\n\n            </div>\n        </div>\n        <div class=\"step1-wrapper\" *ngIf=\"stepIndex === 1\">\n            <div class=\"ui grid\">\n                <div class=\"ten wide column font-1-2 font-weight-bold\">\n                    Add new conversation\n                </div>\n                <div class=\"ten wide column pt-0\">\n                    <form [formGroup]=\"conversationForm\" class=\"ui form\">\n                        <div class=\"field\">\n                            <label>Conversation name <sup><i class=\"asterisk icon asterisk-color\"></i></sup></label>\n                            <input type=\"text\" name=\"name\" placeholder=\"Enter name\" formControlName=\"name\">\n                        </div>\n                        <div class=\"field\">\n                            <label>Conversation description</label>\n                            <textarea rows=\"5\" name=\"description\" placeholder=\"Enter description\"\n                                      formControlName=\"description\"></textarea>\n                        </div>\n                        <div class=\"field\">\n                            <label>Purpose of the conversation <sup><i\n                                    class=\"asterisk icon asterisk-color\"></i></sup></label>\n                            <input type=\"text\" name=\"name\" placeholder=\"Enter purpose\" formControlName=\"purpose\">\n                        </div>\n                        <div class=\"field\">\n                            <label>Starting message <sup><i class=\"asterisk icon asterisk-color\"></i></sup></label>\n                            <input type=\"text\" name=\"startingMessage\" placeholder=\"Enter message\"\n                                   formControlName=\"startingMessage\">\n                            <small *ngIf=\"isStartingMessageExist\" class=\"text-danger\">This starting message has already been taken</small>\n                        </div>\n                        <div class=\"two fields\">\n                            <div class=\"field\">\n                                <label>Start Date And Time</label>\n                                <div class=\"ui left icon input\">\n                                    <i class=\"calendar icon\"></i>\n                                    <input suiDatepicker\n                                           formControlName=\"startDate\"\n                                           [pickerMode]=\"'datetime'\"\n                                           [pickerMinDate]=\"startMinDate\"\n                                           [pickerUseNativeOnMobile]=\"false\">\n                                </div>\n                            </div>\n                            <div class=\"field\">\n                                <label>End Date And Time</label>\n                                <div class=\"ui left icon input\">\n                                    <i class=\"calendar icon\"></i>\n                                    <input suiDatepicker\n                                           formControlName=\"endDate\"\n                                           [pickerMode]=\"'datetime'\"\n                                           [pickerMinDate]=\"endMinDate\"\n                                           [pickerUseNativeOnMobile]=\"false\">\n                                </div>\n                            </div>\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n            <div class=\"ui divider\"></div>\n            <div class=\"ui grid\">\n                <div class=\"six wide column\">\n                    <h6>User segments</h6>\n                    <p class=\"pt-10\">{{userSegments.length}} segments added</p>\n                </div>\n                <div class=\"six wide column  right aligned\">\n                    <div class=\"pt-0\">\n                        <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary mr-10\"\n                                (click)=\"onUserSegmentAddClick()\">\n                            Create new\n                        </button>\n                        <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary\" (click)=\"userSegment()\">\n                            Choose from existing\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"ui grid\">\n                <ng-container *ngIf=\"userSegments && userSegments.length\">\n                    <div class=\"ui three column grid\">\n                        <div class=\"column\" *ngFor=\"let userSegment of userSegments; let i = index\">\n                            <div class=\"ui fluid card\">\n                                <div class=\"content\">\n                                    <i class=\"right floated icon trash delete-icon\"\n                                       (click)=\"onUserSegmentDelete(i)\"></i>\n                                    {{userSegment.name}}\n                                    <div class=\"meta\">User count {{userSegment.count}}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n\n            </div>\n        </div>\n\n        <div class=\"step2-wrapper\" *ngIf=\"stepIndex === 2\">\n            <div class=\"ui grid\">\n                <div class=\"ten wide column font-1-2 font-weight-bold\">\n                    Conversation flow\n                </div>\n                <div class=\"two wide column right aligned\">\n                    <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary\"\n                            *ngIf=\"selectedLogic && selectedLogic.length\"\n                            (click)=\"openModel()\">\n                        Add Logic\n                    </button>\n                </div>\n            </div>\n            <div class=\"ui grid\">\n                <ng-container *ngIf=\"selectedLogic && selectedLogic.length <= 0; else showTable\">\n                    <div class=\"twelve wide column center aligned\">\n                        <div class=\"pt-0\">\n                            <div class=\"w-25-per text-center\" style=\"margin: auto; padding: 2rem;\">\n                                <div class=\"text-center\">\n                                    <div class=\"text-center\">\n                                        <img alt=\"Search Icon\" src=\"assets/uci-console/images/empty.svg\">\n                                    </div>\n                                    <div class=\"text-center mt-20\">\n                                        No logic Added\n                                    </div>\n                                </div>\n                                <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary mt-10\" (click)=\"openModel()\">\n                                    Add logic\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <ng-template #showTable>\n                    <div class=\"twelve wide column\">\n                        <table class=\"ui table\" style=\"width: 100%\">\n                            <thead>\n                            <tr>\n                                <th class=\"one wide center aligned UpReviewTableHeader sorted bl-0\">\n                                    Step\n                                </th>\n                                <th class=\"three wide UpReviewTableHeader sorted bl-0\">\n                                    Name\n                                </th>\n                                <th class=\"five wide UpReviewTableHeader sorted bl-0\">\n                                    Description\n                                </th>\n                                <th class=\"one wide center aligned UpReviewTableHeader sorted bl-0\">\n                                    Action\n                                </th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            <tr class=\"UpForReviewListHover\"\n                                *ngFor=\"let logic of selectedLogic; let i = index;\">\n                                <td class=\"center aligned\">{{i + 1}}</td>\n                                <td>{{logic?.name}}</td>\n                                <td>{{logic?.description}}</td>\n                                <td class=\"center aligned\">\n                                    <div class=\"ui dropdown\" suiDropdown>\n                                        <i class=\"ellipsis vertical icon ellipsis-icon dropdown\"\n                                        ></i>\n                                        <div class=\"menu\" suiDropdownMenu>\n                                            <div class=\"item\" (click)=\"openModel(); getEditLogicData(logic, i)\">Edit\n                                            </div>\n                                            <div class=\"item\" (click)=\"onDelete(logic, i)\">Delete</div>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</ng-container>\n\n<sui-modal *ngIf=\"collectionListModal\" [mustScroll]=\"true\" [isClosable]=\"false\" [transitionDuration]=\"0\"\n           [size]=\"'large'\"\n           class=\"sb-modal\" (dismissed)=\"this.collectionListModal = false;\" #modal>\n    <div class=\"sb-modal-header\">\n        {{logicForm.get('id').value ? ' Update' : 'Add'}} Conversation Logic\n    </div>\n    <div class=\"sb-modal-content\">\n        <form [formGroup]=\"logicForm\" class=\"ui form\">\n            <div class=\"field\">\n                <label>Name <sup><i class=\"asterisk icon asterisk-color\"></i></sup></label>\n                <input type=\"text\" name=\"name\" placeholder=\"Enter name\" formControlName=\"name\">\n            </div>\n            <div class=\"field\">\n                <label>Description</label>\n                <textarea rows=\"3\" name=\"description\" placeholder=\"Enter description\"\n                          formControlName=\"description\"></textarea>\n            </div>\n            <div class=\"field\">\n                <label>\n                    <div class=\"two fields m-0\">\n                        <div class=\"field p-0\">\n                            Upload ODK Form (.xml)<sup><i class=\"asterisk icon asterisk-color\"></i></sup>\n                        </div>\n                        <div class=\"field text-right p-0\">\n                            <a class=\"mx-20 sample-download\" (click)=\"manualDownload()\">Instruction Manual</a>\n                            <a class=\"ml-1 sample-download\" (click)=\"sampleODKDownload()\">Sample ODK Form (.xlsx)</a>\n                        </div>\n                    </div>\n\n                </label>\n                <input type=\"file\" name=\"file\" placeholder=\"Browse XML File...\"\n                       (change)=\"onFileUpload($event)\" accept=\".xml\">\n                <small *ngIf=\"odkFileAlreadyExist\" class=\"text-danger\">{{fileErrorStatus}}</small>\n            </div>\n        </form>\n    </div>\n    <div class=\"sb-modal-actions\">\n        <ng-container *ngIf=\"isModalLoaderShow; else modalBtn\">\n            <button class=\"sb-btn sb-btn-normal sb-btn-primary p-0\">\n                <div class=\"ui active tiny inline loader\"></div>\n            </button>\n        </ng-container>\n        <ng-template #modalBtn>\n            <button class=\"sb-btn sb-btn-normal sb-btn-primary\" (click)=\"onLogicAdd();modal.deny('denied')\"\n                    [disabled]=\"logicForm.invalid\">\n                {{logicForm.get('id').value ? ' Update' : 'Add'}}\n            </button>\n        </ng-template>\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary\"\n                (click)=\"modal.deny('denied');isModalLoaderShow = false;logicForm.patchValue({formId: ''});\">\n            Cancel\n        </button>\n    </div>\n</sui-modal>\n\n<sui-modal *ngIf=\"termsAndConditionModal\" [mustScroll]=\"true\" [isClosable]=\"false\" [transitionDuration]=\"0\"\n           [size]=\"'large'\"\n           class=\"sb-modal\" (dismissed)=\"this.termsAndConditionModal = false\" #modal>\n    <div class=\"sb-modal-header\">\n        Terms and Conditions\n    </div>\n    <div class=\"sb-modal-content\">\n        <lib-terms-conditions></lib-terms-conditions>\n    </div>\n    <div class=\"sb-modal-actions\">\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary\"\n                (click)=\"modal.deny('denied');\">\n            Cancel\n        </button>\n    </div>\n</sui-modal>\n<sui-modal *ngIf=\"verifyAllItemsModal\" [mustScroll]=\"true\" [isClosable]=\"false\" [transitionDuration]=\"0\"\n           [size]=\"'large'\"\n           class=\"sb-modal\" (dismissed)=\"this.verifyAllItemsModal = false\" #verifyAllModal>\n    <div class=\"sb-modal-header\">\n        <h4>\n            Please confirm that ALL the following items are verified (by ticking the check-boxes) before you can submit:\n        </h4>\n    </div>\n    <div class=\"sb-modal-content\">\n        <div class=\"ui grid\">\n            <div class=\"four wide column\">\n                <div class=\"mb-20\">\n                    <h4>Appropriateness</h4>\n                    <div class=\"ui divider\"></div>\n                </div>\n                <div class=\"ui grid\" *ngFor=\"let list of Appropriateness; let i = index\">\n                    <div class=\"two wide column pb-0\">\n                        <input type=\"checkbox\" [name]=\"'appropriateness' + i\" [(ngModel)]=\"list.checks\">\n                    </div>\n                    <div class=\"ten wide column pl-0 pb-0 line-height\">\n                        {{list.text}}\n                    </div>\n                </div>\n            </div>\n            <div class=\"four wide column\">\n                <div class=\"mb-20\">\n                    <h4>Content Details</h4>\n                    <div class=\"ui divider\"></div>\n                </div>\n                <div class=\"ui grid\" *ngFor=\"let list of contentDetails; let i = index\">\n                    <div class=\"two wide column pb-0\">\n                        <input type=\"checkbox\" [name]=\"'contentDetails' + i\" [(ngModel)]=\"list.checks\">\n                    </div>\n                    <div class=\"ten wide column pl-0 pb-0 line-height\">\n                        {{list.text}}\n                    </div>\n                </div>\n            </div>\n            <div class=\"four wide column\">\n                <div class=\"mb-20\">\n                    <h4>Usability</h4>\n                    <div class=\"ui divider\"></div>\n                </div>\n                <div class=\"ui grid\" *ngFor=\"let list of usability; let i = index\">\n                    <div class=\"two wide column pb-0\">\n                        <input type=\"checkbox\" [name]=\"'usability' + i\" [(ngModel)]=\"list.checks\">\n                    </div>\n                    <div class=\"ten wide column pl-0 pb-0 line-height\">\n                        {{list.text}}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"sb-modal-actions\">\n        <ng-container *ngIf=\"isLoaderShow; else submitBtn\">\n            <button class=\"sb-btn sb-btn-normal sb-btn-primary p-0\">\n                <div class=\"ui active tiny inline loader\"></div>\n            </button>\n        </ng-container>\n        <ng-template #submitBtn>\n            <button *ngIf=\"isSubmit\" class=\"sb-btn sb-btn-normal sb-btn-primary\"\n                    (click)=\"onSubmit(true);\">\n                Submit\n            </button>\n            <button *ngIf=\"!isSubmit\" class=\"sb-btn sb-btn-normal sb-btn-primary\"\n                    (click)=\"onSubmit(false);\">\n                Save\n            </button>\n        </ng-template>\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary\"\n                (click)=\"allCheck(false); verifyAllModal.deny('denied');\">\n            Cancel\n        </button>\n        <button class=\"sb-btn sb-btn-normal sb-btn-primary allCheckBtn\" (click)=\"allCheck(true)\">\n            Confirm All\n        </button>\n    </div>\n</sui-modal>\n", styles: [".filter_search{border-radius:25px!important}.ellipsis-icon{font-size:1.2rem}.w-50-px{width:50px!important}.font-1-2{font-size:1.2rem}.ui.form .field>label{font-weight:400}.action-dropdown{top:2px;left:-56px;z-index:2;position:absolute}.action-dropdown .item{cursor:pointer}.action-dropdown .item:hover{background-color:#f6f6f6}.steps{width:20px;height:20px;overflow:hidden;border:1px solid #777777;border-radius:10px;display:flex;align-items:center;justify-content:center;background-color:#e2e2e2;color:#000;margin-right:.7rem;font-size:.75rem}.font-0-75{font-size:.75rem}.line{background-color:#777;width:25%;height:1px}.blue-bg-white-text{background-color:#0c5593!important;color:#fff!important}.green-bg-white-text{background-color:#3c763d!important;color:#fff!important}.w-25-per{width:25%}.delete-icon{color:red;font-size:1.5rem}.delete-icon-sec{display:flex;justify-content:center;align-items:center}button:disabled{background:#89cff0;border-color:#89cff0}.asterisk-color{color:red}.t-and-c-title{cursor:pointer!important}.t-and-c-title:hover{color:#89cff0!important}.sb-modal.ui.modal{box-shadow:none!important}.sb-modal.ui.modal.normal{max-width:45rem;height:0!important}.line-height{line-height:normal}.allCheckBtn{position:absolute;left:1rem}.sample-download{text-decoration:underline!important;cursor:pointer!important}.text-danger{color:red!important}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.UciService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: i3.UntypedFormBuilder }, { type: i4.GlobalService }]; }, propDecorators: { verifyAllModal: [{
                type: ViewChild,
                args: ['verifyAllModal']
            }] } });
//# sourceMappingURL=data:application/json;base64,