import { Component } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../services/uci.service";
import * as i2 from "@angular/router";
import * as i3 from "../../services/global.service";
import * as i4 from "@angular/common";
import * as i5 from "@angular/forms";
import * as i6 from "@project-sunbird/ng2-semantic-ui";
export class ConversationListComponent {
    constructor(uciService, router, globalService) {
        this.uciService = uciService;
        this.router = router;
        this.globalService = globalService;
        this.chatBots = [];
        this.pager = {
            totalItems: 0,
            currentPage: 1,
            pageSize: 10,
            totalPages: 0,
            startPage: 0,
            endPage: 0,
            startIndex: 0,
            endIndex: 0,
            pages: []
        };
        this.pageNumber = 1;
        this.column = '';
        this.sortDirection = '';
        this.reverse = false;
    }
    ngOnInit() {
        this.user = this.globalService.getUser();
        if (!this.user) {
            this.router.navigate(['uci-admin']);
            return;
        }
        this.getAllChatBots();
    }
    getAllChatBots() {
        const param = {
            page: this.pager.currentPage,
            perPage: this.pager.pageSize
        };
        if (this.search) {
            param.name = this.search;
            this.uciService.searchConversation(param).subscribe(data => this.parseConversations(data));
        }
        else {
            this.uciService.fetchConversation(param).subscribe(data => this.parseConversations(data));
        }
    }
    parseConversations(data) {
        this.chatBots = [];
        data.data.forEach(bot => {
            const obj = { ...bot, segmentText: '', userCount: 0, status: bot.status || 'Draft' };
            obj.status = bot.status === 'enabled' ? 'Live' : bot.status === 'disabled' ? 'Disabled' : 'Draft';
            const segmentNames = [];
            bot.userSegments.forEach(userSegment => {
                segmentNames.push(userSegment.name);
                obj.userCount += (userSegment.count || 0);
            });
            obj.segmentText = segmentNames.join(', ');
            this.chatBots.push(obj);
        });
        this.pager.totalItems = data.total;
        this.pager.totalPages = Math.ceil(data.total / this.pager.pageSize);
        this.pager.pages = [];
        let i = 1;
        while (i <= Math.ceil(data.total / this.pager.pageSize)) {
            this.pager.pages.push(i);
            i++;
        }
    }
    sortColumns(column) {
        this.column = column;
        this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';
        this.reverse = !this.reverse;
    }
    navigateToPage(page) {
        if (page < 1 || page > this.pager.totalPages) {
            return;
        }
        this.pageNumber = page;
        this.pager.currentPage = page;
        this.getAllChatBots();
    }
    getSearch() {
        this.getAllChatBots();
    }
    onAddNew() {
        this.router.navigateByUrl('uci-admin/add');
    }
    onEdit(conversation) {
        this.router.navigateByUrl(`uci-admin/${conversation.id}/edit`);
    }
    onStatusChange(conversation, index) {
        if (conversation.status === 'Live') {
            this.uciService.pauseConversation(conversation.id).subscribe(data => {
                this.chatBots[index].status = 'Disabled';
            });
        }
        else {
            this.uciService.startConversation(conversation.id).subscribe(data => {
                this.chatBots[index].status = 'Live';
            });
        }
    }
    onDelete(conversation, index) {
        this.uciService.deleteConversation(conversation.id).subscribe(data => {
            this.chatBots.splice(index, 1);
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ConversationListComponent, deps: [{ token: i1.UciService }, { token: i2.Router }, { token: i3.GlobalService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: ConversationListComponent, selector: "lib-conversation-list", ngImport: i0, template: "<div class=\"uci-container\">\n    <div class=\"ui grid\">\n        <div class=\"ten wide column\">\n            <div class=\"sb-search-box b-0 ml-0 large\">\n                <div class=\"input-div relative\" id=\"search-input-container\">\n                    <img alt=\"Search Icon\" class=\"search icon\" src=\"assets/images/search-icon.svg\">\n                    <input class=\"sb-search-input disabled ng-untouched ng-pristine\" id=\"keyword\" name=\"filter_search\"\n                           [(ngModel)]=\"search\" type=\"text\" placeholder=\"Search\">\n                </div>\n                <button class=\"sb-btn sb-btn-normal disabled\" (click)=\"getSearch()\">Search</button>\n            </div>\n\n        </div>\n        <div class=\"two wide column\">\n            <div class=\"pb-10\">\n                <div class=\"right-floated pt-0\">\n                    <button class=\"sb-btn sb-btn-normal sb-btn-primary\" (click)=\"onAddNew()\"> Add New</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <table class=\"ui single line upForReviewTable table\">\n        <thead>\n        <tr>\n            <th class=\"three wide UpReviewTableHeader sorted bl-0\">\n                Name\n            </th>\n            <th class=\"one wide UpReviewTableHeader sorted bl-0\">\n                Status\n            </th>\n            <th class=\"four wide UpReviewTableHeader sorted bl-0\">\n                Description\n            </th>\n            <th class=\"two wide UpReviewTableHeader sorted bl-0\">\n                Starting Message\n            </th>\n            <th class=\"one wide UpReviewTableHeader sorted bl-0\">\n                User Count\n            </th>\n            <th class=\"one wide UpReviewTableHeader sorted bl-0 center aligned\">\n                Action\n            </th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr class=\"UpForReviewListHover\" *ngFor=\"let content of chatBots; let i = index;\">\n            <td>{{content.name}}</td>\n            <td [ngClass]=\"'status-' + (content.status ? content.status.toLowerCase(): '')\">{{content.status}}</td>\n            <td>{{content?.description}}</td>\n            <td>{{content.startingMessage}}</td>\n            <td class=\"center aligned\">{{content.userCount}}</td>\n            <td class=\"center aligned\">\n                <div class=\"ui dropdown\" suiDropdown>\n                    <i class=\"ellipsis vertical icon ellipsis-icon dropdown\"></i>\n                    <div class=\"menu\" suiDropdownMenu>\n                        <div class=\"item\" (click)=\"onEdit(content)\">Edit</div>\n                        <div class=\"item\" (click)=\"onDelete(content, i)\">Delete</div>\n                        <div class=\"item\" (click)=\"onStatusChange(content, i)\">{{content.status === 'Live' ? 'Disable' : 'Enable'}}</div>\n                    </div>\n                </div>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n    <div class=\"ui grid\">\n        <div class=\"two wide column\"></div>\n        <div class=\"ten wide column\">\n            <div class=\"pb-10\">\n                <div class=\"ui pagination menu mt-10 right-floated pt-0\" *ngIf=\"pager.pages\">\n                    <a [ngClass]=\"{disabled:pager.currentPage===1 }\" class=\"item \"\n                       (click)=\"navigateToPage(1) \">First</a>\n                    <a [ngClass]=\"{disabled:pager.currentPage===1 }\" class=\"item \"\n                       (click)=\"navigateToPage(pager.currentPage - 1)\">Previous</a>\n                    <a *ngFor=\"let page of pager.pages\" [ngClass]=\"{active:pager.currentPage===page}\"\n                       (click)=\"navigateToPage(page)\" class=\"item\">{{page}}</a>\n                    <a [ngClass]=\"{disabled:pager.currentPage=== pager.totalPages}\"\n                       (click)=\"navigateToPage(pager.currentPage + 1)\" class=\"item\">Next</a>\n                    <a [ngClass]=\"{disabled:pager.currentPage=== pager.totalPages}\"\n                       (click)=\"navigateToPage(pager.totalPages)\" class=\"item \">Last</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n", styles: [".ellipsis-icon{font-size:1.2rem}.status-live{color:#3c763d}.status-draft{color:#ffb300}.status-disabled{color:#ff4a2f}.action-dropdown{top:2px;left:-56px;z-index:2;position:absolute}.action-dropdown .item{cursor:pointer}.action-dropdown .item:hover{background-color:#f6f6f6}\n"], dependencies: [{ kind: "directive", type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i5.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i5.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i6.SuiDropdown, selector: "[suiDropdown]", inputs: ["isOpen", "isDisabled", "tabindex", "autoClose"], outputs: ["isOpenChange"] }, { kind: "directive", type: i6.SuiDropdownMenu, selector: "[suiDropdownMenu]", inputs: ["menuTransition", "menuTransitionDuration", "menuAutoSelectFirst", "menuSelectedItemClass"] }, { kind: "directive", type: i6.SuiDropdownMenuItem, selector: ".item" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ConversationListComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-conversation-list', template: "<div class=\"uci-container\">\n    <div class=\"ui grid\">\n        <div class=\"ten wide column\">\n            <div class=\"sb-search-box b-0 ml-0 large\">\n                <div class=\"input-div relative\" id=\"search-input-container\">\n                    <img alt=\"Search Icon\" class=\"search icon\" src=\"assets/images/search-icon.svg\">\n                    <input class=\"sb-search-input disabled ng-untouched ng-pristine\" id=\"keyword\" name=\"filter_search\"\n                           [(ngModel)]=\"search\" type=\"text\" placeholder=\"Search\">\n                </div>\n                <button class=\"sb-btn sb-btn-normal disabled\" (click)=\"getSearch()\">Search</button>\n            </div>\n\n        </div>\n        <div class=\"two wide column\">\n            <div class=\"pb-10\">\n                <div class=\"right-floated pt-0\">\n                    <button class=\"sb-btn sb-btn-normal sb-btn-primary\" (click)=\"onAddNew()\"> Add New</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <table class=\"ui single line upForReviewTable table\">\n        <thead>\n        <tr>\n            <th class=\"three wide UpReviewTableHeader sorted bl-0\">\n                Name\n            </th>\n            <th class=\"one wide UpReviewTableHeader sorted bl-0\">\n                Status\n            </th>\n            <th class=\"four wide UpReviewTableHeader sorted bl-0\">\n                Description\n            </th>\n            <th class=\"two wide UpReviewTableHeader sorted bl-0\">\n                Starting Message\n            </th>\n            <th class=\"one wide UpReviewTableHeader sorted bl-0\">\n                User Count\n            </th>\n            <th class=\"one wide UpReviewTableHeader sorted bl-0 center aligned\">\n                Action\n            </th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr class=\"UpForReviewListHover\" *ngFor=\"let content of chatBots; let i = index;\">\n            <td>{{content.name}}</td>\n            <td [ngClass]=\"'status-' + (content.status ? content.status.toLowerCase(): '')\">{{content.status}}</td>\n            <td>{{content?.description}}</td>\n            <td>{{content.startingMessage}}</td>\n            <td class=\"center aligned\">{{content.userCount}}</td>\n            <td class=\"center aligned\">\n                <div class=\"ui dropdown\" suiDropdown>\n                    <i class=\"ellipsis vertical icon ellipsis-icon dropdown\"></i>\n                    <div class=\"menu\" suiDropdownMenu>\n                        <div class=\"item\" (click)=\"onEdit(content)\">Edit</div>\n                        <div class=\"item\" (click)=\"onDelete(content, i)\">Delete</div>\n                        <div class=\"item\" (click)=\"onStatusChange(content, i)\">{{content.status === 'Live' ? 'Disable' : 'Enable'}}</div>\n                    </div>\n                </div>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n    <div class=\"ui grid\">\n        <div class=\"two wide column\"></div>\n        <div class=\"ten wide column\">\n            <div class=\"pb-10\">\n                <div class=\"ui pagination menu mt-10 right-floated pt-0\" *ngIf=\"pager.pages\">\n                    <a [ngClass]=\"{disabled:pager.currentPage===1 }\" class=\"item \"\n                       (click)=\"navigateToPage(1) \">First</a>\n                    <a [ngClass]=\"{disabled:pager.currentPage===1 }\" class=\"item \"\n                       (click)=\"navigateToPage(pager.currentPage - 1)\">Previous</a>\n                    <a *ngFor=\"let page of pager.pages\" [ngClass]=\"{active:pager.currentPage===page}\"\n                       (click)=\"navigateToPage(page)\" class=\"item\">{{page}}</a>\n                    <a [ngClass]=\"{disabled:pager.currentPage=== pager.totalPages}\"\n                       (click)=\"navigateToPage(pager.currentPage + 1)\" class=\"item\">Next</a>\n                    <a [ngClass]=\"{disabled:pager.currentPage=== pager.totalPages}\"\n                       (click)=\"navigateToPage(pager.totalPages)\" class=\"item \">Last</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n", styles: [".ellipsis-icon{font-size:1.2rem}.status-live{color:#3c763d}.status-draft{color:#ffb300}.status-disabled{color:#ff4a2f}.action-dropdown{top:2px;left:-56px;z-index:2;position:absolute}.action-dropdown .item{cursor:pointer}.action-dropdown .item:hover{background-color:#f6f6f6}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.UciService }, { type: i2.Router }, { type: i3.GlobalService }]; } });
//# sourceMappingURL=data:application/json;base64,