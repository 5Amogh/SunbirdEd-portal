import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-telemetry-error-modal',
  templateUrl: './telemetry-error-modal.component.html',
  styleUrls: ['./telemetry-error-modal.component.scss']
})
export class TelemetryErrorModalComponent implements OnInit {

  constructor() { }

  // Array of telemetry errors events 
  telemetryEventsArr = [];
  columns = [
    { name: 'eid', isSortable: true, prop: 'eid', placeholder: 'Filter state' },
    { name: 'ets', isSortable: true, prop: 'ets', placeholder: 'Filter district' },
    { name: 'edata.id', isSortable: false, prop: 'edata.id', placeholder: 'Filter enrollment' }];

  CONSTANTS = {
    TEL_ERROR: "error"
  }
  

  // Latest event pushed to telemetryEventsArr. This is to avoid duplication of events adding to telemetryEventsArr
  latestEvent = undefined;

  ngOnInit() {
    let instance = this;

    // Catch all the telemetry events generated by Telemetry library
    document.addEventListener("TelemetryEvent", function(event:any) {
      if(event && event.detail) {
        let teleEvent = event.detail;
        if(instance.latestEvent && (instance.latestEvent.mid == teleEvent.mid)){
          // Avoid duplicate events adding to the list
          return;
        }

        // To add only Error events to the list
        if(teleEvent.eid.toLowercase() === instance.CONSTANTS.TEL_ERROR) {
          instance.telemetryEventsArr.push(event.detail);
          instance.latestEvent = event.detail;
          console.log(event);
        }
      }
    });      
  }
}
